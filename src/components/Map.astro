---
import Layout from '@layouts/Layout.astro';

const frontmatter = {
  title: 'Repeaters',
  description: 'Location and coverage information for ERSN repeaters.',
};

const API_KEY = import.meta.env.GOOGLE_API_KEY;

const googleMapsAPI = `https://maps.googleapis.com/maps/api/js?key=${API_KEY}&callback=initMap&loading=async`;
---

<div class="bg-white border border-stone-300 p-6 rounded">
  <div class="flex items-center space-x-3">
    <svg
      xmlns="http://www.w3.org/2000/svg"
      fill="none"
      viewBox="0 0 24 24"
      stroke-width={1.5}
      stroke="currentColor"
      class="h-6 w-6 text-stone-700"
    >
      <path stroke-linecap="round" stroke-linejoin="round" d="M15 10.5a3 3 0 1 1-6 0 3 3 0 0 1 6 0Z"
      ></path>
      <path
        stroke-linecap="round"
        stroke-linejoin="round"
        d="M19.5 10.5c0 7.142-7.5 11.25-7.5 11.25S4.5 17.642 4.5 10.5a7.5 7.5 0 1 1 15 0Z"></path>
    </svg>
    <h3 class="text-xl font-serif text-stone-800">Coverage Area</h3>
  </div>
  <p class="text-stone-600 my-6">
    Our repeater network covers areas of the Highway-4 corridor. There are two repeaters, one on
    Arnold Summit and one in Murphy's.
  </p>
  <div id="map" class="w-full h-[400px] mt-4 mb-2 border border-stone-200 rounded"></div>
</div>

<script is:inline>
  function initMap() {
    const map = new google.maps.Map(document.getElementById('map'), {
      zoom: 11,
      center: { lat: 38.23097, lng: -120.3718 }, // Centered between the two points
      mapTypeId: 'hybrid',
      // Disable all controls.
      streetViewControl: false,
      mapTypeControl: false,
      fullscreenControl: false,
      zoomControl: false,
      rotateControl: false,
      scaleControl: false,
    });

    const markers = [
      {
        position: { lat: 38.30167, lng: -120.31889 },
        title: 'Arnold Summit Repeater',
      },
      {
        position: { lat: 38.16028, lng: -120.42472 },
        title: 'Murphys Repeater',
      },
    ];

    markers.forEach((markerInfo) => {
      new google.maps.Marker({
        position: markerInfo.position,
        map: map,
        title: markerInfo.title,
      });
    });
  }
</script>
<script async is:inline src={googleMapsAPI}></script>
